{
    "category": "指纹传感器",
    "name": "AS608_Sensor",
    "icon": "far fa-fingerprint",
    "introduction": "AS608指纹传感器的驱动库",
    "colour": "#FF0000",
    "version": "0.0.1",
    "author": "K2L",
    "compatibility": {
        "core": [
            "arduino:avr",
            "esp32:esp32",
            "esp8266:esp8266"
        ],
        "voltage": []
    },
    "blocks": [
        {
            "inputsInline": true,
            "type": "AS608_Begin",
            "colour": "#ffca28",
            "message0": "AS608初始化 %1 使用串口%2 波特率%3 访问密码%4",                      
            "args0": [
            {
                "type": "field_input",
                "name":"AS608_name",
                "text":"finger"               
            },
            {
                "type": "field_dropdown",
                "name":"Serial_name",
                "options":[["Serial","Serial"],["SoftwareSerial","mySerial"],["SoftwareSerial1","mySerial1"],["SoftwareSerial2","mySerial2"],["SoftwareSerial3","mySerial3"]]
            },
            {
               "type": "field_dropdown",
               "name":"Serial_BPS",
               "options":[["9600","9600"],["57600","57600"],["115200","115200"]],
               "value": 9600               
            },
            {
                "type": "field_input",
                "name":"AS608_password",
                "text":"0"
               
            }
            ],                                  
            "toolbox": {
              "show": true
            },
            "b4a": {            
              "library": "#include \"SoftwareSerial.h\"\n#include <Adafruit_Fingerprint.h>",
              "object": "Adafruit_Fingerprint ${AS608_name} = Adafruit_Fingerprint(&${Serial_name}, ${AS608_password});",
              "setup": "${AS608_name}.begin(${Serial_BPS});"                                                                                                                                                       
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "AS608_get",
            "colour": "#ffca28",
            "message0": "AS608%1 %2",                      
            "args0": [
            {
                "type": "field_input",
                "name":"AS608_name",
                "text":"finger" 
            },
            {
                "type": "field_dropdown",
                "name":"AS608_getdata_type",
                "options":[["访问密码正确？","verifyPassword()"],["获取一张指纹图像 返回结果","getImage()"],["取两个特征模板创建指纹模型 返回结果","createModel()"],["串口发送指纹模型到主机 返回结果","getModel()"],["清空指纹库 返回结果","emptyDatabase()"],["在指纹库中搜索刚创建的指纹模型 返回结果","fingerFastSearch()"],["读取指纹库中模型数量 返回结果","getTemplateCount()"],["获取指纹模型编号","fingerID"],["获取置信度","confidence"],["获取指纹库中模型数量","templateCount"]]
            }
            ],                                 
            "toolbox": {
              "show": true
            },
            "b4a": {
              "code":  "${AS608_name}.setBrightness(20);"                                                                                                                                                            
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "RGB_colour_ctrl",
            "colour": "#ffca28",
            "message0": "RGB灯 管脚%1 灯号%2 颜色 R值%3 G值%4 B值%5",                      
            "args0": [            
            {
                "type": "field_dropdown",
                "name":"RGB_PIN",
                "options":"${board.digitalPins}",
                "value": 2
            },
            {
              "type": "field_input",
              "name":"RGB_number",
              "text": 1
            },
            {
              "type": "field_input",
              "name":"RGB_Rcolour_value",
              "text": 125
            },
            {
              "type": "field_input",
              "name":"RGB_Gcolour_value",
              "text": 125
            },
            {
              "type": "field_input",
              "name":"RGB_Bcolour_value",
              "text": 125
            }  
            ],                                 
            "toolbox": {
              "show": true
            },
            "b4a": {            
              "code":  "rgb_display_${RGB_PIN}.setPixelColor((${RGB_number})-1, (((${RGB_Rcolour_value} & 0xffffff) << 16) | ((${RGB_Gcolour_value} & 0xffffff) << 8) | ${RGB_Bcolour_value}));"                                                                                                                                                            
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "RGB_parameter",
            "colour": "#ffca28",
            "message0": "RGB灯 管脚%1 灯号%2 色调%3 饱和度%4 亮度%5",                      
            "args0": [            
            {
                "type": "field_dropdown",
                "name":"RGB_PIN",
                "options":"${board.digitalPins}",
                "value": 2
            },
            {
              "type": "field_input",
              "name":"RGB_number",
              "text": 1
            },
            {
              "type": "field_input",
              "name":"RGB_tone",
              "text": 0
            },
            {
              "type": "field_input",
              "name":"RGB_saturation",
              "text": 255
            },
            {
              "type": "field_input",
              "name":"RGB_lightintensity_value",
              "text": 30
            } 
            ],                                 
            "toolbox": {
              "show": true
            },
            "b4a": {            
              "code":  "rgb_display_${RGB_PIN}.setPixelColor((${RGB_number})-1, rgb_display_0.ColorHSV(${RGB_tone},${RGB_saturation},${RGB_lightintensity_value}));"                                                                                                                                                                    
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "RGB_update",
            "colour": "#ffca28",
            "message0": "RGB灯设置生效 管脚%1",                      
            "args0": [            
            {
                "type": "field_dropdown",
                "name":"RGB_PIN",
                "options":"${board.digitalPins}"
            } 
            ],                                 
            "toolbox": {
              "show": true
            },
            "b4a": {            
              "code":  "rgb_display_${RGB_PIN}.show();"                                                                                                                                                                  
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "RGB_demo",
            "colour": "#ffca28",
            "message0": "RGB 管脚%1七彩变换切换时间%2",                      
            "args0": [            
            {
                "type": "field_dropdown",
                "name":"RGB_PIN",
                "options":"${board.digitalPins}"
            },
            {
              "type": "field_input",
              "name":"RGB_demo1_time",
              "text": 20
            } 
            ],                                 
            "toolbox": {
              "show": true
            },
            "b4a": {     
              "setup":"rgb_display_${RGB_PIN}.begin();",
              "object":"uint32_t Wheel(byte WheelPos){\nif(WheelPos < 85){\n  return rgb_display_${RGB_PIN}.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\n}\nelse if(WheelPos < 170){\n  WheelPos -= 85;\n  return rgb_display_${RGB_PIN}.Color(255 - WheelPos * 3, 0, WheelPos * 3);\n }\nelse{\nWheelPos -= 170;\nreturn rgb_display_${RGB_PIN}.Color(0, WheelPos * 3, 255 - WheelPos * 3);\n  }\n}",       
              "function":"void rainbow(uint8_t wait){\nuint16_t i, j;\nfor(j=0; j<256; j++){\n  for(i=0; i<rgb_display_${RGB_PIN}.numPixels(); i++){\n    rgb_display_${RGB_PIN}.setPixelColor(i, Wheel((i+j) & 255));\n  }\n  rgb_display_${RGB_PIN}.show();\n  delay(wait);\n  }\n}",
              "code":  "rainbow(${RGB_demo1_time});"                                                                                                                                                                  
            },
            "previousStatement": null,
            "nextStatement": null
          },
          {
            "inputsInline": true,
            "type": "RGB_demo2",
            "colour": "#ffca28",
            "message0": "RGB灯 管脚%1 %2彩虹值%3",                      
            "args0": [            
            {
                "type": "field_dropdown",
                "name":"RGB_PIN",
                "options":"${board.digitalPins}"
            },
            {
              "type": "field_dropdown",
              "name":"RGB_dem02_mode",
              "options":[["普通","${RGB_dem02_value} & 255"],["渐变","((RGB_RAINBOW_i * 256 / rgb_display_${RGB_PIN}.numPixels()) + ${RGB_dem02_value}) & 255"]]
            },
            {
              "type": "field_input",
              "name":"RGB_dem02_value",
              "text": 20
            }  
            ],
            "toolbox": {
              "show": true
            },
            "b4a": {
              "function":"uint32_t Wheel(byte WheelPos){\n  if(WheelPos < 85){\n    return rgb_display_${RGB_PIN}.Color(WheelPos * 3, 255 - WheelPos * 3, 0);\n  }\n  else if(WheelPos < 170){\n    WheelPos -= 85;\n    return rgb_display_${RGB_PIN}.Color(255 - WheelPos * 3, 0, WheelPos * 3);\n  }\n  else{\n      WheelPos -= 170;return rgb_display_${RGB_PIN}.Color(0, WheelPos * 3, 255 - WheelPos * 3);\n  }\n}",
              "code":  "for(int RGB_RAINBOW_i = 0; RGB_RAINBOW_i < rgb_display_${RGB_PIN}.numPixels(); RGB_RAINBOW_i++){\n  rgb_display_${RGB_PIN}.setPixelColor(RGB_RAINBOW_i, Wheel(${RGB_dem02_mode}));\n}\nrgb_display_${RGB_PIN}.show();"                                                                                                                                                                  
            },
            "previousStatement": null,
            "nextStatement": null
          }
    ]
}